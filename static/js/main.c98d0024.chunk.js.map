{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","id","props","timerId","this","setInterval","tick","prevProps","name","console","log","clearInterval","setState","toLocaleTimeString","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","random","ReactDOM","render","document","getElementById"],"mappings":"sNAWMA,E,4MACJC,MAAQ,CACNC,KAAM,IAAIC,KACVC,GAAI,EAAKC,MAAMC,S,uDAGjB,WAAqB,IAAD,OAClBC,KAAKN,MAAMG,GAAKI,aACd,kBAAM,EAAKC,SACX,O,gCAIJ,SAAmBC,GACbA,EAAUC,OAASJ,KAAKF,MAAMM,MAElCC,QAAQC,IAAR,qCAA0CH,EAAUC,KAApD,eAA+DJ,KAAKF,MAAMM,S,kCAI5E,WACEG,cAAcP,KAAKN,MAAMG,M,kBAG3B,WACEG,KAAKQ,SAAS,CACZb,KAAM,IAAIC,S,oBAId,WACE,IAAQQ,EAASJ,KAAKF,MAAdM,KAER,OACE,qCACE,6BAAKA,IACL,8CAEG,IACAJ,KAAKN,MAAMC,KAAKc,+B,GAvCPC,IAAMC,WA8CXlB,ICrDTmB,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,e,EAGbf,QAAwBE,aAAY,WAClC,IAAMN,EAAa,IAAIC,KAEnB,EAAKF,MAAMmB,gBAEbR,QAAQC,IAAIX,EAAKc,wBAGlB,K,4CAEH,WAAU,IAAD,OACCI,EAAmBb,KAAKN,MAAxBmB,eAER,OACE,sBAAKE,UAAU,MAAf,UACGF,GAEC,cAAC,EAAD,CACE,UAAQ,OACRd,QAASC,KAAKD,QACdK,KAAMJ,KAAKN,MAAMoB,YAGrB,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKT,SAAS,CAAEK,gBAAgB,KAFjD,wBAMA,wBACEG,KAAK,SACLC,QAAS,kBAAM,EAAKT,SAAS,CAAEK,gBAAgB,KAFjD,wBAMA,wBACEG,KAAK,SACLC,QAAS,kBAAM,EAAKT,SAAS,CAAEM,UAAWI,KAAKC,YAFjD,oC,GAzCUT,IAAMC,WAoDTC,ICrDfQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c98d0024.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  timerId: NodeJS.Timer,\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nclass Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n    id: this.props.timerId,\n  };\n\n  componentDidMount() {\n    this.state.id = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n    // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.id);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <>\n        <h1>{name}</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.date.toLocaleTimeString()}\n        </p>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'React clock',\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {\n    const date: Date = new Date();\n\n    if (this.state.isClockVisible) {\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n\n    }\n  }, 1000);\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isClockVisible\n        && (\n          <Clock\n            data-cy=\"time\"\n            timerId={this.timerId}\n            name={this.state.clockName}\n          />\n        )}\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: true })}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: false })}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ clockName: Math.random() })}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}